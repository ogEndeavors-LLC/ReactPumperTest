{"version":3,"file":"static/js/442.efb40d33.chunk.js","mappings":"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","sources":["components/TicketItem.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useUser } from \"./UserContext\";\r\nimport {\r\n  faMapMarkerAlt,\r\n  faCalendarAlt,\r\n  faBriefcase,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { parseISO, format } from \"date-fns\";\r\n\r\nconst TicketItem = React.memo(\r\n  ({ ticket, index, theme, onClick, searchQuery }) => {\r\n    const [hoverAnimation, setHoverAnimation] = useSpring(() => ({\r\n      scale: 1,\r\n      config: { tension: 300, friction: 10 },\r\n    }));\r\n\r\n    const { userRole } = useUser();\r\n    const [year, month, day] = ticket.TicketDate.split(\"-\");\r\n    const localDate = useMemo(() => {\r\n      const date = new Date(ticket.TicketDate);\r\n      date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\r\n      return date;\r\n    }, [ticket.TicketDate]);\r\n\r\n    const formattedDate = useMemo(\r\n      () =>\r\n        localDate.toLocaleDateString(\"en-US\", {\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n          year: \"numeric\",\r\n        }),\r\n      [localDate]\r\n    );\r\n\r\n    const highlightText = (text) => {\r\n      if (!searchQuery) return text;\r\n      const regex = new RegExp(`(${searchQuery})`, \"gi\");\r\n      return text.split(regex).map((part, i) =>\r\n        i % 2 === 0 ? (\r\n          part\r\n        ) : (\r\n          <mark key={i} className=\"bg-yellow-200 text-black\">\r\n            {part}\r\n          </mark>\r\n        )\r\n      );\r\n    };\r\n\r\n    return (\r\n      <animated.li\r\n        className={`flex flex-col md:flex-row justify-between items-center p-6 ${\r\n          index % 2 === 0\r\n            ? theme === \"dark\"\r\n              ? \"bg-gray-800 text-white\"\r\n              : \"bg-white text-gray-800\"\r\n            : theme === \"dark\"\r\n            ? \"bg-gray-700 text-white\"\r\n            : \"bg-gray-100 text-gray-800\"\r\n        } rounded-lg m-4 shadow-lg cursor-pointer`}\r\n        style={{\r\n          transform: hoverAnimation.scale.to((s) => `scale(${s})`),\r\n        }}\r\n        onMouseEnter={() => setHoverAnimation({ scale: 1.05 })}\r\n        onMouseLeave={() => setHoverAnimation({ scale: 1 })}\r\n        onClick={onClick}\r\n      >\r\n        <div className=\"flex-grow mb-4 md:mb-0\">\r\n          <h3 className=\"text-2xl md:text-3xl font-bold mb-2 text-center md:text-left\">\r\n            <Link\r\n              to=\"/view-field-ticket\"\r\n              state={ticket}\r\n              className=\"text-blue-500 hover:text-blue-600\"\r\n            >\r\n              Ticket: {ticket.Ticket}\r\n            </Link>\r\n          </h3>\r\n          <div className=\"text-gray-500 mt-2 text-lg md:text-xl\">\r\n            <div className=\"flex items-center justify-center md:justify-start\">\r\n              <FontAwesomeIcon\r\n                icon={faMapMarkerAlt}\r\n                className=\"mr-2\"\r\n                fixedWidth\r\n              />\r\n              <>\r\n                {ticket.WellID !== null ? (\r\n                  <span>\r\n                    {ticket.LeaseName} # {ticket.WellID}\r\n                  </span>\r\n                ) : (\r\n                  <span>{ticket.LeaseName}</span>\r\n                )}\r\n              </>\r\n            </div>\r\n            <div className=\"flex items-center justify-center md:justify-start\">\r\n              <FontAwesomeIcon\r\n                icon={faCalendarAlt}\r\n                className=\"mr-2\"\r\n                fixedWidth\r\n              />\r\n              <span> {formattedDate}</span>\r\n            </div>\r\n            <div className=\"flex items-center justify-center md:justify-start\">\r\n              <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" fixedWidth />\r\n              <span> {ticket.JobDescription}</span>\r\n            </div>\r\n            {userRole !== \"P\" && (\r\n              <div className=\"flex items-center justify-center md:justify-start\">\r\n                <FontAwesomeIcon icon={faUser} className=\"mr-2\" fixedWidth />\r\n                <span className=\"font-semibold\">\r\n                  {\" \"}\r\n                  {ticket.UserID\r\n                    ? ticket.UserID.charAt(0).toUpperCase() +\r\n                      ticket.UserID.slice(1)\r\n                    : \"N/A\"}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <button\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            onClick();\r\n          }}\r\n          className=\"text-lg md:text-xl text-primary-500 hover:text-primary-600 font-semibold py-2 px-4 rounded-lg border border-primary-500 hover:border-primary-600 transition duration-150 ease-in-out\"\r\n        >\r\n          View Details â†’\r\n        </button>\r\n      </animated.li>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TicketItem;\r\n"],"names":["React","_ref","ticket","index","theme","onClick","searchQuery","hoverAnimation","setHoverAnimation","useSpring","scale","config","tension","friction","userRole","useUser","year","month","day","TicketDate","split","localDate","useMemo","date","Date","setMinutes","getMinutes","getTimezoneOffset","formattedDate","toLocaleDateString","_jsxs","animated","li","className","concat","style","transform","to","s","onMouseEnter","onMouseLeave","children","_jsx","Link","state","Ticket","FontAwesomeIcon","icon","faMapMarkerAlt","fixedWidth","_Fragment","WellID","LeaseName","faCalendarAlt","faBriefcase","JobDescription","faUser","UserID","charAt","toUpperCase","slice","e","stopPropagation"],"sourceRoot":""}